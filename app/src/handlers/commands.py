from asyncio import sleep

from aiogram import Bot, F, Router
from aiogram.filters import Command
from aiogram.types import Message

from ..db.crud import stats
from ..settings import get_settings
from ..tools.formatter import mention_all, stats_format

router = Router()
settings = get_settings()


@router.message(Command(commands=["start"]))
async def start(msg: Message):
    await msg.answer("–¢–µ–±–µ –Ω–µ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è —ç—Ç–æ—Ç –±–æ—Ç")


@router.message(Command(commands=["help"]))
async def help(msg: Message):
    await msg.answer("–ï—Å–ª–∏ —Ç—ã –Ω–µ –∑–Ω–∞–µ—à—å —á—Ç–æ —ç—Ç–æ –∑–∞ –±–æ—Ç –∑–Ω–∞—á–∏—Ç –æ–Ω —Ç–µ–±–µ –Ω–µ –Ω—É–∂–µ–Ω")


@router.message(Command(commands=["info"]))
async def info(msg: Message, bot: Bot):
    user_stats = await stats.get_or_create(msg.from_user.id)
    res = stats_format(user_stats)
    answer = await msg.reply(res, parse_mode="HTML")
    if msg.chat.id == settings.ANGAR_ID:
        await sleep(10)
        await bot.delete_message(msg.chat.id, answer)
        await bot.delete_message(msg.chat.id, msg)


@router.message(Command(commands=["happynewyear"]))
async def new_year(msg: Message, bot: Bot):
    await bot.send_message(
        settings.ANGAR_ID,
        "–ê–Ω–≥–∞—Ä dev –ø–æ–∑–¥—Ä–∞–≤–ª—è–µ—Ç –≤–∞—Å —Å –ù–æ–≤—ã–º –ì–æ–¥–æ–º –∏ –¥–∞—Ä–∏—Ç –≤–∞–º —ç—Ç–æ–≥–æ –µ–±–µ–π—à–µ–≥–æ –±–æ—Ç–∞. –° –ù–æ–≤—ã–º –≥–æ–¥–æ–º, –±—Ä–∞—Ç—å—è ‚ù§Ô∏è‚Äçüî•ü•≥üéâ",
    )


@router.message(Command(commands=["infoall"]))
async def info_all(msg: Message, bot: Bot):
    if msg.chat.id == settings.ANGAR_ID:
        await msg.reply("–í –∞–Ω–≥–∞—Ä —Å—Ä–∞—Ç—å –Ω–µ –±—É–¥—É, —Å–ø—Ä–æ—Å–∏ –≤ –ª—Å")
    else:
        mentions = await mention_all(bot)
        for mention in mentions:
            user_stats = await stats.get_or_create(
                int(mention[mention.index("id=") + 3 : mention.index('">')])
            )
            res = stats_format(user_stats)
            res = res.replace("–¢–≤–æ—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, —Å—É—á–∫–∞", "–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å " + mention)
            await msg.reply(res, parse_mode="HTML")


@router.message(F.text.contains("@all"))
async def all_command(msg: Message):
    text = await mention_all()
    text = " ".join(text)
    await msg.answer(text, parse_mode="HTML")
